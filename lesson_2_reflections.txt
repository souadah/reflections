What happens when you initialize a repository? Why do you need to do it?

A hidden folder is formed that allows the files to be tracked for version
control. A commit is NOT made by initialization.


How is the staging area different from the working directory and the 
repository? What value do you think it offers?

The staging area allows you to isolate files that you want to commit
together, to make logical decisions and understand the reasoning for
each commit that was made.


How can you use the staging area to make sure you have one
commit per logical change?

Move files to the staging area one at a time or in groups
for each commit.


What are some situations when branches would be helpful in keeping
your history organized? How would branches help?

If you want to try a change in the code, but don't want to modify
the main code if other people need access to the code as well.


How do the diagrams help you visualize the branch structure?

Drawing diagrams allows you to visualize parents, branches, etc.
and potentially give insight to your repo structure and answer
any problems you may be having.


What is the effect of merging two branches together? Why do we represent it
in the diagram the way that we do?

Merging branches combines the changes that were made since the branch was formed.
We represent it this way so that we can visualize the parents and which commits
we have access to.


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

It's helpful to have automatic merging for large files or lots of changes, but
it's difficult to be sure that Git is always making the right changes when
merging.